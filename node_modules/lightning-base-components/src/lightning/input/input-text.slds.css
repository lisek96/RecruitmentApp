/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

/* The Input Control Container holds the `start` and `end` slot contents, as well as the input control itself */

:host([data-render-mode="shadow"]) [part~='input-container'] {
  display: flex;
  align-items: center;
  position: relative;
  min-height: var(--sds-c-inputtext-sizing-height);
  padding-inline-end: var(--sds-c-inputtext-spacing-inline-end, var(--sds-c-inputtext-spacing-inline));
  padding-inline-start: var(--sds-c-inputtext-spacing-inline-start, var(--sds-c-inputtext-spacing-inline));
  background-color: var(--sds-c-inputtext-color-background, var(--sds-g-color-neutral-base-1));
  border-width: var(--sds-c-inputtext-sizing-border, var(--sds-g-sizing-border-1, 1px));
  border-style: solid;
  border-color: var(--sds-c-inputtext-color-border, var(--sds-g-color-neutral-base-contrast-3));
  border-radius: var(--sds-c-inputtext-radius-border);
  box-shadow: var(--sds-c-inputtext-shadow);
}

/* The Input element (in markup) */

:host([data-render-mode="shadow"]) [part~='input'] {
  width: 100%;
  height: 100%;
  padding: 0;
  font-size: var(--sds-c-inputtext-font-size);
  color: var(--sds-c-inputtext-text-color);
  line-height: 1;
  border: none;
  background: transparent;
}

/* Placeholder Text */

:host([data-render-mode="shadow"]) [part~='input']::placeholder {
  color: var(--sds-c-inputtext-text-color-placeholder);
  font-style: var(--sds-c-inputtext-font-style-placeholder);
}

/* Focus State */

:host([data-render-mode="shadow"]) [part~='input-container']:focus-within {
  --sds-c-inputtext-color-border: var(
    --sds-c-inputtext-color-border-focus,
    var(--sds-g-color-palette-blue-50, #0176d3)
  );
  --sds-c-inputtext-shadow: var(--sds-c-inputtext-shadow-focus, 0 0 3px var(--sds-g-color-palette-blue-50, #0176d3));
  --sds-c-inputtext-color-background: var(--sds-c-inputtext-color-background-focus);
  --sds-c-inputtext-text-color: var(--sds-c-inputtext-text-color-focus);
}

:host([data-render-mode="shadow"]) [part~='input']:focus {
  outline: none;
}

/* Invalid state */

:host([data-render-mode="shadow"][aria-invalid='true']) [part~='input-container'] {
  --sds-c-inputtext-color-border: var(--sds-c-inputtext-color-border-invalid);
  --sds-c-inputtext-color-background: var(--sds-c-inputtext-color-background-invalid);
}

:host([data-render-mode="shadow"][aria-invalid='true']) [part~='input'] {
  --sds-c-inputtext-text-color: var(--sds-c-inputtext-text-color-invalid);
}

/* Valid State */

:host([data-render-mode="shadow"][aria-invalid='false']) [part~='input-container'] {
  --sds-c-inputtext-color-border: var(--sds-c-inputtext-color-border-valid);
  --sds-c-inputtext-color-background: var(--sds-c-inputtext-color-background-valid);
}

:host([data-render-mode="shadow"][aria-invalid='false']) [part~='input'] {
  --sds-c-inputtext-text-color: var(--sds-c-inputtext-text-color-valid);
}

/* Readonly State */

:host([data-render-mode="shadow"][readonly]) [part~='input-container'] {
  --sds-c-inputtext-sizing-border: var(--sds-c-inputtext-sizing-border-readonly);
  --sds-c-inputtext-spacing-inline-start: var(
    --sds-c-inputtext-spacing-inline-start-readonly,
    var(--sds-c-inputtext-spacing-inline-readonly)
  );
  --sds-c-inputtext-spacing-inline-end: var(
    --sds-c-inputtext-spacing-inline-end-readonly,
    var(--sds-c-inputtext-spacing-inline-readonly)
  );
}

/* Disabled State */

:host([data-render-mode="shadow"][disabled]) [part~='input-container'] {
  --sds-c-inputtext-text-color: #3e3e3c; /* TODO: Replace with Global Styling Hook Fallback */
  --sds-c-inputtext-color-background: #ecebea; /* TODO: Replace with Global Styling Hook Fallback */
  --sds-c-inputtext-color-border: #c9c7c5; /* TODO: Replace with Global Styling Hook Fallback */
}

@supports (--styling-hooks: '') {
  /**
   * Input Text
   */
  :host([data-render-mode="shadow"]) [part~='input-text'] {
    /* Host reassignments to composed slds-icon */
    --slds-c-icon-color-foreground: var(
      --slds-c-inputtext-icon-color-foreground,
      var(--sds-g-color-neutral-base-50, #747474)
    );
    --slds-c-icon-sizing: var(--slds-c-inputtext-icon-sizing, 14px);

    --sds-c-inputtext-spacing-inline-start: var(
      --slds-c-inputtext-spacing-inline-start,
      var(--sds-g-spacing-3, 0.75rem)
    );
    --sds-c-inputtext-spacing-inline-end: var(--slds-c-inputtext-spacing-inline-end, var(--sds-g-spacing-4, 1rem));
    --sds-c-inputtext-sizing-height: var(--slds-c-inputtext-sizing-height, 1.875rem);
    --sds-c-inputtext-color-background: var(--slds-c-inputtext-color-background);
    --sds-c-inputtext-text-color: var(--slds-c-inputtext-text-color);
    --sds-c-inputtext-font-size: var(--slds-c-inputtext-font-size, var(--sds-g-font-scale-neg-2, 0.8125rem));
    --sds-c-inputtext-text-color-placeholder: var(
      --slds-c-inputtext-text-color-placeholder,
      var(--sds-g-color-neutral-base-50, #747474)
    );
    --sds-c-inputtext-color-border: var(--slds-c-inputtext-color-border, var(--sds-g-color-neutral-base-80, #c9c9c9));
    --sds-c-inputtext-sizing-border: var(--slds-c-inputtext-sizing-border);
    --sds-c-inputtext-radius-border: var(--slds-c-inputtext-radius-border, var(--sds-g-radius-border-2, 0.25rem));

    display: flex;
    flex-wrap: wrap;
    align-items: center;

    /* TODO: Add global hook once SLDS creates a new spacing hook that equals the value needed here */
    row-gap: 0.125rem;
  }

  /**
   * Read Only State
   */
  :host([data-render-mode="shadow"][readonly]) [part~='input-text'] {
    --sds-c-inputtext-spacing-inline-start-readonly: 0;
    --slds-c-inputtext-color-border: transparent;
    --slds-c-inputtext-color-background: transparent;
  }

  /**
   * Invalid State
   */
  :host([data-render-mode="shadow"][aria-invalid]) [part~='input-text'] {
    --sds-c-inputtext-color-border-invalid: var(--sds-g-color-error-base-50, #ea001e);
    --slds-c-inputtext-sizing-border: var(--sds-g-sizing-border-2, 2px);
    --slds-c-icon-color-foreground: var(--sds-g-color-error-base-50, #ea001e);
  }

  /**
   * Disabled State
   *
   * Both parts form the visible form control.
   */
  :host([data-render-mode="shadow"][disabled]) [part~='input-container'],:host([data-render-mode="shadow"][disabled]) [part~='input'] {
    cursor: not-allowed;
  }

  /**
   * Label
   */
  :host([data-render-mode="shadow"]) [part='label'] {
    padding-inline-end: var(--sds-g-spacing-2, 0.5rem);
    color: var(--slds-c-inputtext-label-color, var(--sds-g-color-neutral-base-30, #444444));
    font-size: var(--slds-c-inputtext-label-font-size, var(--sds-g-font-scale-neg-3, 0.75rem));

    /* We inline flex to control the spacing between elements and not have to rely on whitespace characters */
    display: inline-flex;

    /* TODO: Add global hook once SLDS creates a new spacing hook that equals the value needed here */
    column-gap: 0.125rem;
  }

  /**
   * Label's Required Symbol
   */
  :host([data-render-mode="shadow"]) [part='label'] [title='required'] {
    color: var(--sds-g-color-error-base-50, #ea001e);
  }

  /**
   * Input Container
   */
  :host([data-render-mode="shadow"]) [part='input-container'] {
    flex: 1 0 100%;
  }

  /**
   * Help Text
   *
   * Note: not to be confused with lightning-helptext. This is for the text
   *       that goes below the input.
   */
  :host([data-render-mode="shadow"]) [part='help-text'] {
    font-size: var(--slds-c-inputtext-helptext-font-size, var(--sds-g-font-scale-neg-3, 0.75rem));

    /* TODO: Add global hook once SLDS creates a new spacing hook that equals the value needed here */
    padding-block-start: 0.125rem;
  }

  /**
   * Help Text's Invalid State â€“ Part container is unique to SLDS
   */
  :host([data-render-mode="shadow"][aria-invalid]) [part='help-text'] {
    color: var(--sds-g-color-error-base-50, #ea001e);
  }

  /**
   * Start
   *
   * Only expects an SLDS icon. We assign the SLDS Icon Styling Hook here
   * so we don't add spacing to other icons composed in the component, e.g.,
   * the icon in the inline help text.
   */
  :host([data-render-mode="shadow"]) [part~='start'] {
    --slds-c-icon-spacing-inline-end: var(--sds-g-spacing-2, 0.5rem);
  }
}
