/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

/* Document
 * --------------------- */

/**
 * Normalize box sizing to border box for all browsers.
 */

*,
::before,
::after {
  box-sizing: border-box;
}

/* Grouping Content
 * --------------------- */

/**
 * Add the correct display in IE.
 */

main {
  display: block;
}

/**
 * 1. Remove the margin in all browsers.
 * 2. Remove the padding in all browsers.
 * 3. Normalize font sizes in all browsers.
 * 4. Normalize font weight in all browsers.
 */

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 0.875rem; /* 3 */
  font-weight: normal; /* 4 */
  margin: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove the margin in all browsers.
 */

p {
  margin: 0;
}

/**
 * 1. Remove the margin in all browsers.
 * 2. Normalize border styles in all browsers.
 */

hr {
  margin: 0; /* 1 */
  border: 0; /* 2 */
  border-top-width: 1px; /* 2 */
  border-style: solid; /* 2 */
  border-color: inherit; /* 2 */
}

/**
 * 1. Remove the margin in all browsers.
 * 2. Remove the padding in all browsers.
 * 3. Remove the list-style in all browsers, sub-system dependant.
 */

ol,
ul {
  list-style: none; /* 3 */
  padding: 0; /* 2 */
  margin: 0; /* 1 */
}

/**
 * Remove the margin in all browsers.
 */

dl,
dt,
dd {
  margin: 0;
}

/* Form Controls
 * --------------------- */

/**
 * Remove the margin in all browsers.
 */

form {
  margin: 0;
}

/**
 * 1. Correct font properties not being inherited.
 * 2. Remove the margin in Firefox and Safari.
 * 3. Fix correct color not being inherited.
 */

button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
  color: inherit; /* 3 */
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Correct inability to style clickable `input` types in iOS.
 * 2. Normalizes cursor indicator on clickable elements.
 */

button,:host([data-render-mode="shadow"]) 
[type='button'],:host([data-render-mode="shadow"]) 
[type='reset'],:host([data-render-mode="shadow"]) 
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  appearance: button; /* 1 */
  cursor: pointer; /* 2 */
}

/**
 * Prevent option or optgroup to increase the width of a select.
 */

select {
  max-width: 100%;
}

/**
 * Correct the outline style in Safari.
 */

input:focus,
button:focus,
select:focus,
textarea:focus {
  outline-offset: 0;
}

/**
 * Remove the inner border and padding in Firefox.
 */

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * 1. Correct the text wrapping in Edge 18- and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
 */

legend {
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  white-space: normal; /* 1 */
  padding: 0; /* 3 */
}

/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */

progress {
  vertical-align: baseline;
}

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

:host([data-render-mode="shadow"]) [type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to 'inherit' in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * Restore the focus styles unset by the previous rule.
 */

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Remove the additional ':invalid' styles in Firefox.
 * See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
 */

:-moz-ui-invalid {
  box-shadow: none;
}

/* Text-level semantics
 * --------------------- */

/**
 * Normalizes cursor indicator on clickable elements.
 */

a {
  cursor: pointer;
}

/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */

abbr[title] {
  text-decoration: underline dotted;
  cursor: help;
}

/**
 * Add the correct font weight in Edge and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd 'em' font sizing in all browsers.
 * 3. Remove the margin in all browsers.
 */

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, 'Liberation Mono', Menlo, monospace; /* 1 */
  font-size: 1em; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Prevent overflow of the container in all browsers
 */

pre {
  overflow: auto;
  -ms-overflow-style: scrollbar;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
 * --------------------- */

/**
 * Change the alignment on media elements in all browsers.
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/**
 * Make images responsive by default.
 */

img,:host([data-render-mode="shadow"]) 
[type='image'] {
  max-width: 100%;
  height: auto;
}

/**
 * Remove the border on iframes in all browsers.
 */

iframe {
  border-style: none;
}

/**
 * Change the fill color to match the text color in all browsers.
 */

svg:not([fill]) {
  fill: currentColor;
}

/* Tabular data
 * --------------------- */

/**
 * 1. Remove text indentation from table contents in Chrome and Safari. [Chromium Bug 999088](https://bugs.chromium.org/p/chromium/issues/detail?id=999088), [Webkit Bug 201297](https://bugs.webkit.org/show_bug.cgi?id=201297)
 * 2. Correct table border color inheritance in all Chrome and Safari. [Chromium Bug 935729](https://bugs.chromium.org/p/chromium/issues/detail?id=935729), [Webkit Bug 195016](https://bugs.webkit.org/show_bug.cgi?id=195016)
 * 3. Collapse border spacing in all browsers
 */

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/* Shadow host
 * --------------------- */

/**
 * 1. Change the line height in all browsers
 * 2. Change the base font size in all browsers, inherit 100% from `html`
 * 3. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS
 * 4. Remove the grey highlight on links in iOS
 * 5. Font Stack:
 *   a. Safari for OS X and iOS (San Francisco)
 *   b. Chrome < 56 for OS X (San Francisco)
 *   c. Windows
 *   d. Android
 *   e. Web Fallback
 *   f. Emoji font stack [Mac, Windows, Linux]
 */

:host([data-render-mode="shadow"]) {
  line-height: 1.5;
  font-size: 0.875rem;
  -webkit-tap-highlight-color: transparent;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, 'Helvetica Neue', Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

:host([data-render-mode="shadow"]) {
  /**
   * Establish independent formatting context, we don't want ancestor rules affecting our layout.
   * This assumes there will not be a direct, child inline-level element.
   * See https://www.w3.org/TR/css-display-3/#establish-an-independent-formatting-context
   */
  display: inline-flex;
}

:host([data-render-mode="shadow"]) [part~='boundary'] {
  padding-block-start: var(--sds-c-icon-spacing-block-start, var(--sds-c-icon-spacing));
  padding-block-end: var(--sds-c-icon-spacing-block-end, var(--sds-c-icon-spacing));
  padding-inline-start: var(--sds-c-icon-spacing-inline-start, var(--sds-c-icon-spacing));
  padding-inline-end: var(--sds-c-icon-spacing-inline-end, var(--sds-c-icon-spacing));
  border-radius: var(--sds-c-icon-radius-border);
  border-width: var(--sds-c-icon-sizing-border, 1px);
  border-style: solid;
  border-color: var(--sds-c-icon-color-border, transparent);
  background-color: var(--sds-c-icon-color-background);
}

:host([data-render-mode="shadow"]) [part~='icon'] {
  display: flex; /* See line #5 */
  height: var(--sds-c-icon-sizing-height, var(--sds-c-icon-sizing));
  width: var(--sds-c-icon-sizing-width, var(--sds-c-icon-sizing));
  color: var(--sds-c-icon-color-foreground);
}

/**
 * Normalize svgs and control width/height with Styling Hooks
 */

svg {
  width: 100%;
  height: 100%;
}

/**
 * @Note: Static fallbacks are in place until SLDS adopts SDS. Without static
 *        fallbacks, styles will regress due to invalid CSS variables from
 *        missing SLDS shared and globals.
 *
 *        Additionally, LBC are currently relying on 'part' attributes to
 *        receive styling. Authoring styles that rely on slots is not recommended.
 */

@supports (--styling-hooks: '') {
  :host([data-render-mode="shadow"][size~='xxx-small']) {
    --slds-c-icon-sizing: 0.5rem;
  }

  :host([data-render-mode="shadow"][size~='xx-small']) {
    --slds-c-icon-sizing: 0.875rem;
  }

  :host([data-render-mode="shadow"][size~='x-small']) {
    --slds-c-icon-sizing: 1rem;
  }

  :host([data-render-mode="shadow"][size~='small']) {
    --slds-c-icon-sizing: 1.5rem;
  }

  :host([data-render-mode="shadow"][size~='large']) {
    --slds-c-icon-sizing: 3rem;
  }

  :host([data-render-mode="shadow"][variant~='warning']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-warning-base-4);
  }

  :host([data-render-mode="shadow"][variant~='success']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-success-base-contrast-1);
  }

  :host([data-render-mode="shadow"][variant~='error']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-error-base-contrast-1);
  }

  :host([data-render-mode="shadow"][variant~='light']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-neutral-base-contrast-1);
  }

  :host([data-render-mode="shadow"]) [part~='boundary'] {
    /* --sds-c-icon-color-background: var(--slds-c-icon-color-background); */
    --sds-c-icon-radius-border: var(--slds-c-icon-radius-border, var(--sds-g-radius-border-2, 0.25rem));
    --sds-c-icon-sizing-border: var(--slds-c-icon-sizing-border);
    --sds-c-icon-color-border: var(--slds-c-icon-color-border);
    --sds-c-icon-spacing-block-start: var(
      --slds-c-icon-spacing-block-start,
      var(--slds-c-icon-spacing-block)
    );
    --sds-c-icon-spacing-block-end: var(--slds-c-icon-spacing-block-end, var(--slds-c-icon-spacing-block));
    --sds-c-icon-spacing-inline-start: var(
      --slds-c-icon-spacing-inline-start,
      var(--slds-c-icon-spacing-inline)
    );
    --sds-c-icon-spacing-inline-end: var(--slds-c-icon-spacing-inline-end, var(--slds-c-icon-spacing-inline));

    /**
     * There's a divergence in LBC that we have to support here: LBC splits their
     * icon implementation into two components: lightning-icon and lightning-primitive-icon.
     * slds-icon is consumed within both with no issues except that the presence of an
     * additional custom element (primitive-icon) creates an unexpected inline-level
     * element and breaks our formatting context. tl;dr, we have to reset the formatting
     * context of the boundary or else we'll inherit line-height from an ancestor and
     * get visual regressions.
     *
     * If lightning-icon is refactored into a single component, this line can be removed.
     */
    display: inline-flex;
  }

  :host([data-render-mode="shadow"]) [part~='icon'] {
    --sds-c-icon-color-foreground: var(--slds-c-icon-color-foreground, var(--sds-g-color-neutral-base-1));
    --sds-c-icon-sizing-height: var(--slds-c-icon-sizing-height, var(--slds-c-icon-sizing, 2rem));
    --sds-c-icon-sizing-width: var(--slds-c-icon-sizing-width, var(--slds-c-icon-sizing, 2rem));
  }

  :host([data-render-mode="shadow"][icon-name*='action']) {
    --slds-c-icon-spacing-block: 0.5rem;
    --slds-c-icon-spacing-inline: 0.5rem;
    --slds-c-icon-radius-border: 50%;
  }
}

/**
 * P R I V A T E
 *
 * The following styling is implemented by classes within the shadow DOM.
 * They're expected to be private to the component and not for external use.
 *
 * See notes for each class for the rationale behind their inclusion.
 */

/**
 * Utility icons traditionally added a class to change the default foreground
 * color (white) to a grey. This was done implicitly whereas other color changes
 * were done explicitly through the 'variant' attribute. So this is an outlier
 * to the overall pattern. Leaving it as-is since an update would require an
 * API change or more investigating.
 *
 * This is a hybrid patch between synthetic and native shadow. The ideal final
 * outcome is the removal of this class and the default utility styling would
 * be implemented through an attribute or some other class-less solution.
 */

:host([data-render-mode="shadow"]) .slds-icon-text-default {
  /*! @css-var-fallback fill */
  --slds-c-icon-color-foreground: var(
    --slds-c-icon-color-foreground-default,
    var(--sds-c-icon-color-foreground-default, #706e6b)
  );
}

:host([data-render-mode="shadow"]) .slds-icon-text-default.slds-is-disabled {
  fill: #dddbda;
}

/**
 * A temporarily baked-in utility class until SLDS gets a proper utility package.
 *
 * This is a hybrid patch between synthetic and native shadow. The ideal final
 * outcome is the removal of this class and replacing the class with the SLDS
 * utility package solution.
 */

:host([data-render-mode="shadow"]) .slds-assistive-text {
  position: absolute !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  text-transform: none !important;
  white-space: nowrap !important;
}

/**
 * For the initial alpha version, we're hardcoding in the various unique icon styles.
 *
 * Next version, we want to dynamically generate these from legacy SLDS with the
 * following design pattern:
 *
 * [type="action"][icon-name="approval"] {
 *   --sds-c-icon-color-background: var(--slds-c-icon-color-background, #111);
 * }
 */

:host([data-render-mode="shadow"]) .slds-icon_disabled {
  background-color: currentColor;
}

/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

@supports (--styling-hooks: '') {
  /* :host::part(color-picker-button), */
  :host([data-render-mode="shadow"]) [part~='color-picker-button'] {
    --slds-c-icon-color-foreground: var(
      --slds-c-colorpickerbutton-color-foreground,
      var(--sds-g-color-neutral-base-50, #747474)
    );
    --slds-c-icon-sizing: 0.875rem;

    vertical-align: top;
    padding-inline: var(--slds-c-colorpickerbutton-spacing-inline, var(--sds-g-spacing-2, 0.5rem));
    padding-block: var(--slds-c-colorpickerbutton-spacing-block, 0.3rem);
    background: var(--slds-c-colorpickerbutton-color-background, var(--sds-g-color-brand-base-100, #ffffff));
    line-height: 1;
    border-color: var(--slds-c-colorpickerbutton-color-border, var(--sds-g-color-neutral-base-80, #c9c9c9));
    justify-content: center;
    flex-shrink: 0;
    position: relative;
    display: inline-flex;
    align-items: center;
    border-style: solid;
    border-width: var(--slds-c-colorpickerbutton-sizing-border, var(--sds-g-sizing-border-1, 1px));
    border-radius: var(--slds-c-colorpickerbutton-radius-border, var(--sds-g-radius-border-2, 0.25rem));
    box-shadow: var(--slds-c-colorpickerbutton-shadow);
    cursor: pointer;
  }

  :host([data-render-mode="shadow"]) [part~='color-picker-button']:hover,:host([data-render-mode="shadow"]) 
  [part~='color-picker-button']:focus {
    --slds-c-colorpickerbutton-color-background: var(--slds-c-colorpickerbutton-color-background-hover);
    --slds-c-colorpickerbutton-color-border: var(--slds-c-colorpickerbutton-color-border-hover);
    --slds-c-colorpickerbutton-color-foreground: var(
      --slds-c-colorpickerbutton-color-foreground-hover,
      var(--sds-g-color-brand-base-30, #014486)
    );
  }
  :host([data-render-mode="shadow"]) [part~='color-picker-button']:focus {
    --slds-c-colorpickerbutton-shadow: var(
      --slds-c-colorpickerbutton-shadow-focus,
      0 0 3px var(--sds-g-color-brand-base-50, #0176d3)
    );

    outline: 0;
  }

  :host([data-render-mode="shadow"]) [part~='color-picker-button']:active {
    --slds-c-colorpickerbutton-color-background: var(--slds-c-colorpickerbutton-color-background-active);
    --slds-c-colorpickerbutton-color-border: var(
      --slds-c-colorpickerbutton-color-border-active,
      var(--sds-g-color-brand-base-30, #014486)
    );
    --slds-c-colorpickerbutton-color-foreground: var(
      --slds-c-colorpickerbutton-color-foreground-active,
      var(--sds-g-color-brand-base-30, #014486)
    );

    outline: 0;
  }

  :host([data-render-mode="shadow"]) [part~='color-picker-button'] .slds-swatch {
    display: inline-block;
    vertical-align: middle;
    height: 1.25rem;
    width: 1.25rem;
    border-radius: var(--sds-g-radius-border-1, 0.125rem);
    box-shadow: inset 0 0 1px rgb(0 0 0 / 40%);
    margin-inline-end: var(--sds-g-spacing-1, 0.25rem);
  }

  :host([data-render-mode="shadow"]) [part='color-picker-button'] .slds-assistive-text {
    position: absolute !important;
    margin: -1px !important;
    border: 0 !important;
    padding: 0 !important;
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
    clip: rect(0 0 0 0) !important;
    text-transform: none !important;
    white-space: nowrap !important;
  }

  :host([data-render-mode="shadow"][disabled]) [part='color-picker-button'] {
    --slds-c-colorpickerbutton-color-foreground: var(
      --slds-c-colorpickerbutton-color-foreground-disabled,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
    );

    pointer-events: none;
    border-color: var(--slds-c-colorpickerbutton-color-border-disabled, var(--sds-g-color-neutral-base-80, #c9c9c9));
  }

  /* TO DO: .panel and .panel-open should be renamed 
  when working on color-input ticket */
  :host([data-render-mode="shadow"]) [part='color-picker-button'] + .panel {
    display: none;
  }

  :host([data-render-mode="shadow"]) [part='color-picker-button'] + .panel-open {
    display: block;
    width: 250px;
    height: 270px;
    background-color: grey;
  }
}
